package migration;

import java.io.*;
import java.util.regex.*;

public class StepDefinitionsConverter {

    public static void main(String[] args) {
        // Input and output files
        String inputFilePath = "/Users/ghazalashahin/Documents/acc/new/src/test/java/StepDefinitions/LoginStepsDefinition.java";
        String outputFolderPath = "/Users/ghazalashahin/Documents/acc/migration/Include/scripts/groovy";

        // Read the Selenium test file
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFilePath))) {
            String line;
            StringBuilder groovyScript = new StringBuilder();

            // Header for the Groovy script
            groovyScript.append("// Generated by SeleniumToKatalonCucumberConverter\n");
            groovyScript.append("import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject\n");
            groovyScript.append("import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI\n");
            groovyScript.append("import cucumber.api.java.en.And\n");
            groovyScript.append("import cucumber.api.java.en.Given\n");
            groovyScript.append("import cucumber.api.java.en.Then\n");
            groovyScript.append("import cucumber.api.java.en.When\n\n");

            // Start the class definition
            groovyScript.append("class LoginSteps {\n\n");

            // Flags to prevent duplication of steps
            boolean isGivenStepAdded = false;
            boolean isWhenStepAdded = false;
            boolean isAndStepAdded = false;

            // Read each line from the Selenium test file
            while ((line = reader.readLine()) != null) {
                // Convert specific Selenium steps to Cucumber-style Katalon steps
                if (line.contains("sendKeys") && !isGivenStepAdded) {
                    // Regex to capture the sendKeys step for username input
                    Pattern pattern = Pattern.compile(".*sendKeys\\(\"([^\"]+)\"\\);");
                    Matcher matcher = pattern.matcher(line);
                    if (matcher.find()) {
                        groovyScript.append("    @Given('the user is on the login page')\n");
                        groovyScript.append("    def the_user_is_on_the_login_page() {\n");
                        groovyScript.append("        WebUI.openBrowser('')\n");
                        groovyScript.append("        WebUI.navigateToUrl(GlobalVariable.url)  // Assuming GlobalVariable.url is defined\n");
                        groovyScript.append("    }\n\n");

                        groovyScript.append("    @When('the user enters valid username and password')\n");
                        groovyScript.append("    def the_user_enters_valid_username_and_password() {\n");
                        groovyScript.append("        WebUI.setText(findTestObject('LoginPage/usernameField'), GlobalVariable.username)  // Test object for username field\n");
                        groovyScript.append("        WebUI.setText(findTestObject('LoginPage/passwordField'), GlobalVariable.password)  // Test object for password field\n");
                        groovyScript.append("    }\n\n");

                        isGivenStepAdded = true; // Mark as added
                        isWhenStepAdded = true;  // Mark as added
                    }
                } else if (line.contains("click") && !isAndStepAdded) {
                    // Regex to capture the click step for login button
                    Pattern pattern = Pattern.compile(".*click\\(\\);");
                    Matcher matcher = pattern.matcher(line);
                    if (matcher.find()) {
                        groovyScript.append("    @And('clicks the login button')\n");
                        groovyScript.append("    def clicks_the_login_button() {\n");
                        groovyScript.append("        WebUI.click(findTestObject('LoginPage/loginButton'))  // Test object for login button\n");
                        groovyScript.append("    }\n\n");
                        isAndStepAdded = true; // Mark as added
                    }
                } else if (line.contains("isDisplayed")) {
                    // Regex to capture the success check after login
                    Pattern pattern = Pattern.compile(".*isDisplayed\\(\\);");
                    Matcher matcher = pattern.matcher(line);
                    if (matcher.find()) {
                        groovyScript.append("    @Then('the user should be logged in')\n");
                        groovyScript.append("    def the_user_should_be_logged_in() {\n");
                        groovyScript.append("        WebUI.verifyElementVisible(findTestObject('DashboardPage/dashboardLogo'))  // Test object for dashboard logo\n");
                        groovyScript.append("        WebUI.closeBrowser()  // Close the browser after the test\n");
                        groovyScript.append("    }\n\n");
                    }
                }
            }

            // End of class definition
            groovyScript.append("}\n");

            // Output file path
            File outputFolder = new File(outputFolderPath);
            if (!outputFolder.exists()) {
                outputFolder.mkdirs();  // Create the output directory if it doesn't exist
            }

            // Write the converted Groovy script to the output folder
            String outputFilePath = outputFolderPath + "/LoginSteps.groovy";
            try (BufferedWriter writer = new BufferedWriter(new FileWriter(outputFilePath))) {
                writer.write(groovyScript.toString());
                System.out.println("Conversion successful! Saved to: " + outputFilePath);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
